Description: allow skipping "privileged" tests with "-test.short"
Author: Tianon Gravi <tianon@debian.org>
Forwarded: no

--- a/engine/builder/dockerfile/internals_test.go
+++ b/engine/builder/dockerfile/internals_test.go
@@ -19,6 +19,7 @@
 )
 
 func TestEmptyDockerfile(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	contextDir, cleanup := createTestTempDir(t, "", "builder-dockerfile-test")
 	defer cleanup()
 
@@ -28,6 +29,7 @@
 }
 
 func TestSymlinkDockerfile(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	contextDir, cleanup := createTestTempDir(t, "", "builder-dockerfile-test")
 	defer cleanup()
 
@@ -43,6 +45,7 @@
 }
 
 func TestDockerfileOutsideTheBuildContext(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	contextDir, cleanup := createTestTempDir(t, "", "builder-dockerfile-test")
 	defer cleanup()
 
@@ -52,6 +55,7 @@
 }
 
 func TestNonExistingDockerfile(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	contextDir, cleanup := createTestTempDir(t, "", "builder-dockerfile-test")
 	defer cleanup()
 
--- a/engine/daemon/graphdriver/overlay2/overlay_test.go
+++ b/engine/daemon/graphdriver/overlay2/overlay_test.go
@@ -37,22 +37,27 @@
 // This avoids creating a new driver for each test if all tests are run
 // Make sure to put new tests between TestOverlaySetup and TestOverlayTeardown
 func TestOverlaySetup(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.GetDriver(t, driverName)
 }
 
 func TestOverlayCreateEmpty(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.DriverTestCreateEmpty(t, driverName)
 }
 
 func TestOverlayCreateBase(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.DriverTestCreateBase(t, driverName)
 }
 
 func TestOverlayCreateSnap(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.DriverTestCreateSnap(t, driverName)
 }
 
 func TestOverlay128LayerRead(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.DriverTestDeepLayerRead(t, 128, driverName)
 }
 
--- a/engine/volume/local/local_test.go
+++ b/engine/volume/local/local_test.go
@@ -31,6 +31,7 @@
 }
 
 func TestRemove(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	skip.If(t, runtime.GOOS == "windows", "FIXME: investigate why this test fails on CI")
 	rootDir, err := ioutil.TempDir("", "local-volume-test")
 	if err != nil {
@@ -74,6 +75,7 @@
 }
 
 func TestInitializeWithVolumes(t *testing.T) {
+	t.Skip("DM - skipping privileged tests")
 	rootDir, err := ioutil.TempDir("", "local-volume-test")
 	if err != nil {
 		t.Fatal(err)
@@ -106,6 +108,7 @@
 }
 
 func TestCreate(t *testing.T) {
+	t.Skip("DM - skipping privileged tests")
 	rootDir, err := ioutil.TempDir("", "local-volume-test")
 	if err != nil {
 		t.Fatal(err)
@@ -178,6 +181,7 @@
 }
 
 func TestCreateWithOpts(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	skip.If(t, runtime.GOOS == "windows")
 	skip.If(t, os.Getuid() != 0, "requires mounts")
 	rootDir, err := ioutil.TempDir("", "local-volume-test")
--- a/engine/pkg/mount/mount_unix_test.go
+++ b/engine/pkg/mount/mount_unix_test.go
@@ -25,6 +25,7 @@
 }
 
 func TestMounted(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	if os.Getuid() != 0 {
 		t.Skip("root required")
 	}
@@ -80,6 +81,7 @@
 }
 
 func TestMountReadonly(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	if os.Getuid() != 0 {
 		t.Skip("root required")
 	}
@@ -129,6 +131,7 @@
 }
 
 func TestGetMounts(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	mounts, err := GetMounts(nil)
 	if err != nil {
 		t.Fatal(err)
--- a/engine/pkg/mount/sharedsubtree_linux_test.go
+++ b/engine/pkg/mount/sharedsubtree_linux_test.go
@@ -12,6 +12,7 @@
 
 // nothing is propagated in or out
 func TestSubtreePrivate(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	if os.Getuid() != 0 {
 		t.Skip("root required")
 	}
@@ -114,6 +115,7 @@
 // Testing that when a target is a shared mount,
 // then child mounts propagate to the source
 func TestSubtreeShared(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	if os.Getuid() != 0 {
 		t.Skip("root required")
 	}
@@ -186,6 +188,7 @@
 // testing that mounts to a shared source show up in the slave target,
 // and that mounts into a slave target do _not_ show up in the shared source
 func TestSubtreeSharedSlave(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	if os.Getuid() != 0 {
 		t.Skip("root required")
 	}
@@ -294,6 +297,7 @@
 }
 
 func TestSubtreeUnbindable(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	if os.Getuid() != 0 {
 		t.Skip("root required")
 	}
--- a/engine/daemon/graphdriver/overlay/overlay_test.go
+++ b/engine/daemon/graphdriver/overlay/overlay_test.go
@@ -19,22 +19,27 @@
 // This avoids creating a new driver for each test if all tests are run
 // Make sure to put new tests between TestOverlaySetup and TestOverlayTeardown
 func TestOverlaySetup(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.GetDriver(t, "overlay")
 }
 
 func TestOverlayCreateEmpty(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.DriverTestCreateEmpty(t, "overlay")
 }
 
 func TestOverlayCreateBase(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.DriverTestCreateBase(t, "overlay")
 }
 
 func TestOverlayCreateSnap(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.DriverTestCreateSnap(t, "overlay")
 }
 
 func TestOverlay50LayerRead(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.DriverTestDeepLayerRead(t, 50, "overlay")
 }
 
--- a/engine/pkg/archive/archive_test.go
+++ b/engine/pkg/archive/archive_test.go
@@ -264,6 +264,7 @@
 }
 
 func TestUntarPathWithInvalidDest(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	tempFolder, err := ioutil.TempDir("", "docker-archive-test")
 	assert.NilError(t, err)
 	defer os.RemoveAll(tempFolder)
@@ -436,6 +437,7 @@
 }
 
 func TestCopyWithTarInexistentDestWillCreateIt(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	skip.If(t, os.Getuid() != 0, "skipping test that requires root")
 	tempFolder, err := ioutil.TempDir("", "docker-archive-test")
 	if err != nil {
@@ -729,6 +731,7 @@
 }
 
 func TestTarWithOptionsChownOptsAlwaysOverridesIdPair(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	origin, err := ioutil.TempDir("", "docker-test-tar-chown-opt")
 	assert.NilError(t, err)
 
@@ -780,6 +783,7 @@
 }
 
 func TestTarWithOptions(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	// TODO Windows: Figure out how to fix this test.
 	if runtime.GOOS == "windows" {
 		t.Skip("Failing on Windows")
@@ -970,6 +974,7 @@
 }
 
 func TestUntarHardlinkToSymlink(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	// TODO Windows. There may be a way of running this, but turning off for now
 	skip.If(t, runtime.GOOS == "windows", "hardlinks on Windows")
 	skip.If(t, os.Getuid() != 0, "skipping test that requires root")
@@ -1200,6 +1205,7 @@
 }
 
 func TestReplaceFileTarWrapper(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	filesInArchive := 20
 	testcases := []struct {
 		doc       string
--- a/engine/pkg/archive/archive_linux_test.go
+++ b/engine/pkg/archive/archive_linux_test.go
@@ -85,6 +85,7 @@
 }
 
 func TestOverlayTarUntar(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	oldmask, err := system.Umask(0)
 	assert.NilError(t, err)
 	defer system.Umask(oldmask)
@@ -124,6 +125,7 @@
 }
 
 func TestOverlayTarAUFSUntar(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	oldmask, err := system.Umask(0)
 	assert.NilError(t, err)
 	defer system.Umask(oldmask)
--- a/cli/cli/command/image/build_test.go
+++ b/cli/cli/command/image/build_test.go
@@ -23,6 +23,7 @@
 )
 
 func TestRunBuildDockerfileFromStdinWithCompress(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	buffer := new(bytes.Buffer)
 	fakeBuild := newFakeBuild()
 	fakeImageBuild := func(ctx context.Context, context io.Reader, options types.ImageBuildOptions) (types.ImageBuildResponse, error) {
@@ -120,6 +121,7 @@
 // TODO: test "context selection" logic directly when runBuild is refactored
 // to support testing (ex: docker/cli#294)
 func TestRunBuildFromGitHubSpecialCase(t *testing.T) {
+t.Skip("DM - disabled due to network access")
 	cmd := NewBuildCommand(test.NewFakeCli(nil))
 	// Clone a small repo that exists so git doesn't prompt for credentials
 	cmd.SetArgs([]string{"github.com/docker/for-win"})
--- a/engine/daemon/oci_linux_test.go
+++ b/engine/daemon/oci_linux_test.go
@@ -89,6 +89,7 @@
 }
 
 func TestGetSourceMount(t *testing.T) {
+t.Skip("Skipped failing test")
 	// must be able to find source mount for /
 	mnt, _, err := getSourceMount("/")
 	assert.NilError(t, err)
--- a/engine/layer/mount_test.go
+++ b/engine/layer/mount_test.go
@@ -12,6 +12,7 @@
 )
 
 func TestMountInit(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	// TODO Windows: Figure out why this is failing
 	if runtime.GOOS == "windows" {
 		t.Skip("Failing on Windows")
@@ -120,6 +121,7 @@
 }
 
 func TestMountChanges(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	// TODO Windows: Figure out why this is failing
 	if runtime.GOOS == "windows" {
 		t.Skip("Failing on Windows")
