Description: allow skipping "privileged" tests with "-test.short"
Author: Tianon Gravi <tianon@debian.org>
Forwarded: no

--- a/engine/builder/dockerfile/internals_test.go
+++ b/engine/builder/dockerfile/internals_test.go
@@ -18,8 +18,9 @@
 	"gotest.tools/skip"
 )
 
 func TestEmptyDockerfile(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	contextDir, cleanup := createTestTempDir(t, "", "builder-dockerfile-test")
 	defer cleanup()
 
 	createTestTempFile(t, contextDir, builder.DefaultDockerfileName, "", 0777)
@@ -27,8 +28,9 @@
 	readAndCheckDockerfile(t, "emptyDockerfile", contextDir, "", "the Dockerfile (Dockerfile) cannot be empty")
 }
 
 func TestSymlinkDockerfile(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	contextDir, cleanup := createTestTempDir(t, "", "builder-dockerfile-test")
 	defer cleanup()
 
 	createTestSymlink(t, contextDir, builder.DefaultDockerfileName, "/etc/passwd")
@@ -42,8 +44,9 @@
 	readAndCheckDockerfile(t, "symlinkDockerfile", contextDir, builder.DefaultDockerfileName, expectedError)
 }
 
 func TestDockerfileOutsideTheBuildContext(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	contextDir, cleanup := createTestTempDir(t, "", "builder-dockerfile-test")
 	defer cleanup()
 
 	expectedError := "Forbidden path outside the build context: ../../Dockerfile ()"
@@ -51,8 +54,9 @@
 	readAndCheckDockerfile(t, "DockerfileOutsideTheBuildContext", contextDir, "../../Dockerfile", expectedError)
 }
 
 func TestNonExistingDockerfile(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	contextDir, cleanup := createTestTempDir(t, "", "builder-dockerfile-test")
 	defer cleanup()
 
 	expectedError := "Cannot locate specified Dockerfile: Dockerfile"
--- a/engine/daemon/graphdriver/overlay2/overlay_test.go
+++ b/engine/daemon/graphdriver/overlay2/overlay_test.go
@@ -36,24 +36,29 @@
 
 // This avoids creating a new driver for each test if all tests are run
 // Make sure to put new tests between TestOverlaySetup and TestOverlayTeardown
 func TestOverlaySetup(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.GetDriver(t, driverName)
 }
 
 func TestOverlayCreateEmpty(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.DriverTestCreateEmpty(t, driverName)
 }
 
 func TestOverlayCreateBase(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.DriverTestCreateBase(t, driverName)
 }
 
 func TestOverlayCreateSnap(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.DriverTestCreateSnap(t, driverName)
 }
 
 func TestOverlay128LayerRead(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.DriverTestDeepLayerRead(t, 128, driverName)
 }
 
 func TestOverlayDiffApply10Files(t *testing.T) {
--- a/engine/volume/local/local_test.go
+++ b/engine/volume/local/local_test.go
@@ -30,8 +30,9 @@
 
 }
 
 func TestRemove(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	skip.If(t, runtime.GOOS == "windows", "FIXME: investigate why this test fails on CI")
 	rootDir, err := ioutil.TempDir("", "local-volume-test")
 	if err != nil {
 		t.Fatal(err)
@@ -73,8 +74,9 @@
 	}
 }
 
 func TestInitializeWithVolumes(t *testing.T) {
+	t.Skip("DM - skipping privileged tests")
 	rootDir, err := ioutil.TempDir("", "local-volume-test")
 	if err != nil {
 		t.Fatal(err)
 	}
@@ -105,8 +107,9 @@
 	}
 }
 
 func TestCreate(t *testing.T) {
+	t.Skip("DM - skipping privileged tests")
 	rootDir, err := ioutil.TempDir("", "local-volume-test")
 	if err != nil {
 		t.Fatal(err)
 	}
@@ -177,8 +180,9 @@
 	}
 }
 
 func TestCreateWithOpts(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	skip.If(t, runtime.GOOS == "windows")
 	skip.If(t, os.Getuid() != 0, "requires mounts")
 	rootDir, err := ioutil.TempDir("", "local-volume-test")
 	if err != nil {
--- a/engine/pkg/mount/mount_unix_test.go
+++ b/engine/pkg/mount/mount_unix_test.go
@@ -24,8 +24,9 @@
 	}
 }
 
 func TestMounted(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	if os.Getuid() != 0 {
 		t.Skip("root required")
 	}
 
@@ -79,8 +80,9 @@
 	}
 }
 
 func TestMountReadonly(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	if os.Getuid() != 0 {
 		t.Skip("root required")
 	}
 
@@ -128,8 +130,9 @@
 	}
 }
 
 func TestGetMounts(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	mounts, err := GetMounts(nil)
 	if err != nil {
 		t.Fatal(err)
 	}
--- a/engine/pkg/mount/sharedsubtree_linux_test.go
+++ b/engine/pkg/mount/sharedsubtree_linux_test.go
@@ -11,8 +11,9 @@
 )
 
 // nothing is propagated in or out
 func TestSubtreePrivate(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	if os.Getuid() != 0 {
 		t.Skip("root required")
 	}
 
@@ -113,8 +114,9 @@
 
 // Testing that when a target is a shared mount,
 // then child mounts propagate to the source
 func TestSubtreeShared(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	if os.Getuid() != 0 {
 		t.Skip("root required")
 	}
 
@@ -185,8 +187,9 @@
 
 // testing that mounts to a shared source show up in the slave target,
 // and that mounts into a slave target do _not_ show up in the shared source
 func TestSubtreeSharedSlave(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	if os.Getuid() != 0 {
 		t.Skip("root required")
 	}
 
@@ -293,8 +296,9 @@
 	}
 }
 
 func TestSubtreeUnbindable(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	if os.Getuid() != 0 {
 		t.Skip("root required")
 	}
 
--- a/engine/daemon/graphdriver/overlay/overlay_test.go
+++ b/engine/daemon/graphdriver/overlay/overlay_test.go
@@ -18,24 +18,29 @@
 
 // This avoids creating a new driver for each test if all tests are run
 // Make sure to put new tests between TestOverlaySetup and TestOverlayTeardown
 func TestOverlaySetup(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.GetDriver(t, "overlay")
 }
 
 func TestOverlayCreateEmpty(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.DriverTestCreateEmpty(t, "overlay")
 }
 
 func TestOverlayCreateBase(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.DriverTestCreateBase(t, "overlay")
 }
 
 func TestOverlayCreateSnap(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.DriverTestCreateSnap(t, "overlay")
 }
 
 func TestOverlay50LayerRead(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.DriverTestDeepLayerRead(t, 50, "overlay")
 }
 
 // Fails due to bug in calculating changes after apply
--- a/engine/pkg/archive/archive_test.go
+++ b/engine/pkg/archive/archive_test.go
@@ -263,8 +263,9 @@
 	}
 }
 
 func TestUntarPathWithInvalidDest(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	tempFolder, err := ioutil.TempDir("", "docker-archive-test")
 	assert.NilError(t, err)
 	defer os.RemoveAll(tempFolder)
 	invalidDestFolder := filepath.Join(tempFolder, "invalidDest")
@@ -435,8 +436,9 @@
 	}
 }
 
 func TestCopyWithTarInexistentDestWillCreateIt(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	skip.If(t, os.Getuid() != 0, "skipping test that requires root")
 	tempFolder, err := ioutil.TempDir("", "docker-archive-test")
 	if err != nil {
 		t.Fatal(nil)
@@ -728,8 +730,9 @@
 	}
 }
 
 func TestTarWithOptionsChownOptsAlwaysOverridesIdPair(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	origin, err := ioutil.TempDir("", "docker-test-tar-chown-opt")
 	assert.NilError(t, err)
 
 	defer os.RemoveAll(origin)
@@ -779,8 +782,9 @@
 	}
 }
 
 func TestTarWithOptions(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	// TODO Windows: Figure out how to fix this test.
 	if runtime.GOOS == "windows" {
 		t.Skip("Failing on Windows")
 	}
@@ -969,8 +973,9 @@
 	}
 }
 
 func TestUntarHardlinkToSymlink(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	// TODO Windows. There may be a way of running this, but turning off for now
 	skip.If(t, runtime.GOOS == "windows", "hardlinks on Windows")
 	skip.If(t, os.Getuid() != 0, "skipping test that requires root")
 	for i, headers := range [][]*tar.Header{
@@ -1199,8 +1204,9 @@
 	}
 }
 
 func TestReplaceFileTarWrapper(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	filesInArchive := 20
 	testcases := []struct {
 		doc       string
 		filename  string
--- a/engine/pkg/archive/archive_linux_test.go
+++ b/engine/pkg/archive/archive_linux_test.go
@@ -84,8 +84,9 @@
 	}
 }
 
 func TestOverlayTarUntar(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	oldmask, err := system.Umask(0)
 	assert.NilError(t, err)
 	defer system.Umask(oldmask)
 
@@ -123,8 +124,9 @@
 	checkOverlayWhiteout(t, filepath.Join(dst, "d3", "f1"))
 }
 
 func TestOverlayTarAUFSUntar(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	oldmask, err := system.Umask(0)
 	assert.NilError(t, err)
 	defer system.Umask(oldmask)
 
--- a/cli/cli/command/image/build_test.go
+++ b/cli/cli/command/image/build_test.go
@@ -22,8 +22,9 @@
 	"gotest.tools/skip"
 )
 
 func TestRunBuildDockerfileFromStdinWithCompress(t *testing.T) {
+t.Skip("DM - skipping privileged test")
 	buffer := new(bytes.Buffer)
 	fakeBuild := newFakeBuild()
 	fakeImageBuild := func(ctx context.Context, context io.Reader, options types.ImageBuildOptions) (types.ImageBuildResponse, error) {
 		tee := io.TeeReader(context, buffer)
