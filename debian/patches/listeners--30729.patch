Description: Convert socket group to int
Origin: https://github.com/moby/moby/pull/30729
Author: Derek McGowan <derek@mcgstyle.net>
Date: Tue, 7 Feb 2017 11:32:39 -0800

diff --git a/pkg/listeners/group_unix.go b/pkg/listeners/group_unix.go
new file mode 100644
index 00000000000..183a0eb9d35
--- /dev/null
+++ b/pkg/listeners/group_unix.go
@@ -0,0 +1,32 @@
+// +build !windows
+
+package listeners
+
+import (
+	"fmt"
+	"strconv"
+
+	"github.com/opencontainers/runc/libcontainer/user"
+	"github.com/pkg/errors"
+)
+
+func lookupGID(name string) (int, error) {
+	groupFile, err := user.GetGroupPath()
+	if err != nil {
+		return -1, errors.Wrap(err, "error looking up groups")
+	}
+	groups, err := user.ParseGroupFileFilter(groupFile, func(g user.Group) bool {
+		return g.Name == name || strconv.Itoa(g.Gid) == name
+	})
+	if err != nil {
+		return -1, errors.Wrapf(err, "error parsing groups for %s", name)
+	}
+	if groups != nil && len(groups) > 0 {
+		return groups[0].Gid, nil
+	}
+	gid, err := strconv.Atoi(name)
+	if err == nil {
+		return gid, nil
+	}
+	return -1, fmt.Errorf("group %s not found", name)
+}
diff --git a/pkg/listeners/listeners_unix.go b/pkg/listeners/listeners_unix.go
index fddd3a8..d8f48f4 100644
--- a/pkg/listeners/listeners_unix.go
+++ b/pkg/listeners/listeners_unix.go
@@ -32,7 +32,11 @@ func Init(proto, addr, socketGroup string, tlsConfig *tls.Config) ([]net.Listene
 		}
 		ls = append(ls, l)
 	case "unix":
-		l, err := sockets.NewUnixSocket(addr, socketGroup)
+		gid, err := lookupGID(socketGroup)
+		if err != nil {
+			return nil, err
+		}
+		l, err := sockets.NewUnixSocket(addr, gid)
 		if err != nil {
 			return nil, fmt.Errorf("can't create unix socket %s: %v", addr, err)
 		}
