Description: allow skipping "privileged" tests with "-test.short"
Author: Tianon Gravi <tianon@debian.org>
Forwarded: no

Index: docker.io/builder/dockerfile/evaluator_test.go
===================================================================
--- docker.io.orig/builder/dockerfile/evaluator_test.go
+++ docker.io/builder/dockerfile/evaluator_test.go
@@ -131,6 +131,7 @@ func initDispatchTestCases() []dispatchT
 }
 
 func TestDispatch(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	testCases := initDispatchTestCases()
 
 	for _, testCase := range testCases {
Index: docker.io/builder/dockerfile/internals_test.go
===================================================================
--- docker.io.orig/builder/dockerfile/internals_test.go
+++ docker.io/builder/dockerfile/internals_test.go
@@ -11,6 +11,7 @@ import (
 )
 
 func TestEmptyDockerfile(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	contextDir, cleanup := createTestTempDir(t, "", "builder-dockerfile-test")
 	defer cleanup()
 
@@ -20,6 +21,7 @@ func TestEmptyDockerfile(t *testing.T) {
 }
 
 func TestSymlinkDockerfile(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	contextDir, cleanup := createTestTempDir(t, "", "builder-dockerfile-test")
 	defer cleanup()
 
@@ -35,6 +37,7 @@ func TestSymlinkDockerfile(t *testing.T)
 }
 
 func TestDockerfileOutsideTheBuildContext(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	contextDir, cleanup := createTestTempDir(t, "", "builder-dockerfile-test")
 	defer cleanup()
 
@@ -44,6 +47,7 @@ func TestDockerfileOutsideTheBuildContex
 }
 
 func TestNonExistingDockerfile(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	contextDir, cleanup := createTestTempDir(t, "", "builder-dockerfile-test")
 	defer cleanup()
 
Index: docker.io/builder/remote_test.go
===================================================================
--- docker.io.orig/builder/remote_test.go
+++ docker.io/builder/remote_test.go
@@ -152,6 +152,7 @@ func TestInspectResponseEmptyContentType
 }
 
 func TestMakeRemoteContext(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	contextDir, cleanup := createTestTempDir(t, "", "builder-tarsum-test")
 	defer cleanup()
 
Index: docker.io/builder/tarsum_test.go
===================================================================
--- docker.io.orig/builder/tarsum_test.go
+++ docker.io/builder/tarsum_test.go
@@ -193,6 +193,7 @@ func TestRemoveDirectory(t *testing.T) {
 }
 
 func TestMakeTarSumContext(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	contextDir, cleanup := createTestTempDir(t, "", "builder-tarsum-test")
 	defer cleanup()
 
Index: docker.io/daemon/daemon_test.go
===================================================================
--- docker.io.orig/daemon/daemon_test.go
+++ docker.io/daemon/daemon_test.go
@@ -158,6 +158,7 @@ func TestValidContainerNames(t *testing.
 }
 
 func TestContainerInitDNS(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	tmp, err := ioutil.TempDir("", "docker-container-test-")
 	if err != nil {
 		t.Fatal(err)
Index: docker.io/daemon/daemon_unix_test.go
===================================================================
--- docker.io.orig/daemon/daemon_unix_test.go
+++ docker.io/daemon/daemon_unix_test.go
@@ -204,6 +204,7 @@ func TestNetworkOptions(t *testing.T) {
 }
 
 func TestMigratePre17Volumes(t *testing.T) {
+	t.Skip("DM - Skipping privileged test")
 	rootDir, err := ioutil.TempDir("", "test-daemon-volumes")
 	if err != nil {
 		t.Fatal(err)
Index: docker.io/daemon/graphdriver/overlay2/overlay_test.go
===================================================================
--- docker.io.orig/daemon/graphdriver/overlay2/overlay_test.go
+++ docker.io/daemon/graphdriver/overlay2/overlay_test.go
@@ -49,22 +49,27 @@ func skipIfNaive(t *testing.T) {
 // This avoids creating a new driver for each test if all tests are run
 // Make sure to put new tests between TestOverlaySetup and TestOverlayTeardown
 func TestOverlaySetup(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.GetDriver(t, driverName)
 }
 
 func TestOverlayCreateEmpty(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.DriverTestCreateEmpty(t, driverName)
 }
 
 func TestOverlayCreateBase(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.DriverTestCreateBase(t, driverName)
 }
 
 func TestOverlayCreateSnap(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.DriverTestCreateSnap(t, driverName)
 }
 
 func TestOverlay128LayerRead(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.DriverTestDeepLayerRead(t, 128, driverName)
 }
 
Index: docker.io/daemon/graphdriver/vfs/vfs_test.go
===================================================================
--- docker.io.orig/daemon/graphdriver/vfs/vfs_test.go
+++ docker.io/daemon/graphdriver/vfs/vfs_test.go
@@ -17,18 +17,22 @@ func init() {
 // This avoids creating a new driver for each test if all tests are run
 // Make sure to put new tests between TestVfsSetup and TestVfsTeardown
 func TestVfsSetup(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.GetDriver(t, "vfs")
 }
 
 func TestVfsCreateEmpty(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.DriverTestCreateEmpty(t, "vfs")
 }
 
 func TestVfsCreateBase(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.DriverTestCreateBase(t, "vfs")
 }
 
 func TestVfsCreateSnap(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.DriverTestCreateSnap(t, "vfs")
 }
 
Index: docker.io/volume/local/local_test.go
===================================================================
--- docker.io.orig/volume/local/local_test.go
+++ docker.io/volume/local/local_test.go
@@ -29,6 +29,7 @@ func TestGetAddress(t *testing.T) {
 }
 
 func TestRemove(t *testing.T) {
+	t.Skip("DM - skipping privileged tests")
 	// TODO Windows: Investigate why this test fails on Windows under CI
 	//               but passes locally.
 	if runtime.GOOS == "windows" {
@@ -76,6 +77,7 @@ func TestRemove(t *testing.T) {
 }
 
 func TestInitializeWithVolumes(t *testing.T) {
+	t.Skip("DM - skipping privileged tests")
 	rootDir, err := ioutil.TempDir("", "local-volume-test")
 	if err != nil {
 		t.Fatal(err)
@@ -108,6 +110,7 @@ func TestInitializeWithVolumes(t *testin
 }
 
 func TestCreate(t *testing.T) {
+	t.Skip("DM - skipping privileged tests")
 	rootDir, err := ioutil.TempDir("", "local-volume-test")
 	if err != nil {
 		t.Fatal(err)
@@ -180,6 +183,7 @@ func TestValidateName(t *testing.T) {
 }
 
 func TestCreateWithOpts(t *testing.T) {
+	t.Skip("DM - skipping privileged tests")
 	if runtime.GOOS == "windows" || runtime.GOOS == "solaris" {
 		t.Skip()
 	}
@@ -286,6 +290,7 @@ func TestCreateWithOpts(t *testing.T) {
 }
 
 func TestRealodNoOpts(t *testing.T) {
+	t.Skip("DM - skipping privileged tests")
 	rootDir, err := ioutil.TempDir("", "volume-test-reload-no-opts")
 	if err != nil {
 		t.Fatal(err)
Index: docker.io/pkg/mount/mount_unix_test.go
===================================================================
--- docker.io.orig/pkg/mount/mount_unix_test.go
+++ docker.io/pkg/mount/mount_unix_test.go
@@ -25,6 +25,7 @@ func TestMountOptionsParsing(t *testing.
 }
 
 func TestMounted(t *testing.T) {
+	t.Skip("DM - skip privileged test")
 	tmp := path.Join(os.TempDir(), "mount-tests")
 	if err := os.MkdirAll(tmp, 0777); err != nil {
 		t.Fatal(err)
@@ -76,6 +77,7 @@ func TestMounted(t *testing.T) {
 }
 
 func TestMountReadonly(t *testing.T) {
+	t.Skip("DM - skip privileged test")
 	tmp := path.Join(os.TempDir(), "mount-tests")
 	if err := os.MkdirAll(tmp, 0777); err != nil {
 		t.Fatal(err)
@@ -121,6 +123,7 @@ func TestMountReadonly(t *testing.T) {
 }
 
 func TestGetMounts(t *testing.T) {
+	t.Skip("DM - skip privileged test")
 	mounts, err := GetMounts()
 	if err != nil {
 		t.Fatal(err)
Index: docker.io/pkg/mount/sharedsubtree_linux_test.go
===================================================================
--- docker.io.orig/pkg/mount/sharedsubtree_linux_test.go
+++ docker.io/pkg/mount/sharedsubtree_linux_test.go
@@ -11,6 +11,7 @@ import (
 
 // nothing is propagated in or out
 func TestSubtreePrivate(t *testing.T) {
+	t.Skip("DM - skip privileged test")
 	tmp := path.Join(os.TempDir(), "mount-tests")
 	if err := os.MkdirAll(tmp, 0777); err != nil {
 		t.Fatal(err)
@@ -109,6 +110,7 @@ func TestSubtreePrivate(t *testing.T) {
 // Testing that when a target is a shared mount,
 // then child mounts propagate to the source
 func TestSubtreeShared(t *testing.T) {
+	t.Skip("DM - skip privileged test")
 	tmp := path.Join(os.TempDir(), "mount-tests")
 	if err := os.MkdirAll(tmp, 0777); err != nil {
 		t.Fatal(err)
@@ -177,6 +179,7 @@ func TestSubtreeShared(t *testing.T) {
 // testing that mounts to a shared source show up in the slave target,
 // and that mounts into a slave target do _not_ show up in the shared source
 func TestSubtreeSharedSlave(t *testing.T) {
+	t.Skip("DM - skip privileged test")
 	tmp := path.Join(os.TempDir(), "mount-tests")
 	if err := os.MkdirAll(tmp, 0777); err != nil {
 		t.Fatal(err)
@@ -281,6 +284,7 @@ func TestSubtreeSharedSlave(t *testing.T
 }
 
 func TestSubtreeUnbindable(t *testing.T) {
+	t.Skip("DM - skip privileged test")
 	tmp := path.Join(os.TempDir(), "mount-tests")
 	if err := os.MkdirAll(tmp, 0777); err != nil {
 		t.Fatal(err)
Index: docker.io/pkg/idtools/idtools_unix_test.go
===================================================================
--- docker.io.orig/pkg/idtools/idtools_unix_test.go
+++ docker.io/pkg/idtools/idtools_unix_test.go
@@ -17,6 +17,7 @@ type node struct {
 }
 
 func TestMkdirAllAs(t *testing.T) {
+	t.Skip("DM - skip privileged test")
 	dirName, err := ioutil.TempDir("", "mkdirall")
 	if err != nil {
 		t.Fatalf("Couldn't create temp dir: %v", err)
@@ -77,6 +78,7 @@ func TestMkdirAllAs(t *testing.T) {
 }
 
 func TestMkdirAllNewAs(t *testing.T) {
+	t.Skip("DM - skip privileged test")
 
 	dirName, err := ioutil.TempDir("", "mkdirnew")
 	if err != nil {
@@ -137,6 +139,7 @@ func TestMkdirAllNewAs(t *testing.T) {
 }
 
 func TestMkdirAs(t *testing.T) {
+	t.Skip("DM - skip privileged test")
 
 	dirName, err := ioutil.TempDir("", "mkdir")
 	if err != nil {
Index: docker.io/pkg/chrootarchive/archive_test.go
===================================================================
--- docker.io.orig/pkg/chrootarchive/archive_test.go
+++ docker.io/pkg/chrootarchive/archive_test.go
@@ -23,6 +23,7 @@ func init() {
 }
 
 func TestChrootTarUntar(t *testing.T) {
+	t.Skip("DM - skip privileged test")
 	tmpdir, err := ioutil.TempDir("", "docker-TestChrootTarUntar")
 	if err != nil {
 		t.Fatal(err)
@@ -54,6 +55,7 @@ func TestChrootTarUntar(t *testing.T) {
 // gh#10426: Verify the fix for having a huge excludes list (like on `docker load` with large # of
 // local images)
 func TestChrootUntarWithHugeExcludesList(t *testing.T) {
+	t.Skip("DM - skip privileged test")
 	tmpdir, err := ioutil.TempDir("", "docker-TestChrootUntarHugeExcludes")
 	if err != nil {
 		t.Fatal(err)
@@ -152,6 +154,7 @@ func compareFiles(src string, dest strin
 }
 
 func TestChrootTarUntarWithSymlink(t *testing.T) {
+	t.Skip("DM - skip privileged test")
 	// TODO Windows: Figure out why this is failing
 	if runtime.GOOS == "windows" {
 		t.Skip("Failing on Windows")
@@ -178,6 +181,7 @@ func TestChrootTarUntarWithSymlink(t *te
 }
 
 func TestChrootCopyWithTar(t *testing.T) {
+	t.Skip("DM - skip privileged test")
 	// TODO Windows: Figure out why this is failing
 	if runtime.GOOS == "windows" || runtime.GOOS == "solaris" {
 		t.Skip("Failing on Windows and Solaris")
@@ -228,6 +232,7 @@ func TestChrootCopyWithTar(t *testing.T)
 }
 
 func TestChrootCopyFileWithTar(t *testing.T) {
+	t.Skip("DM - skip privileged test")
 	tmpdir, err := ioutil.TempDir("", "docker-TestChrootCopyFileWithTar")
 	if err != nil {
 		t.Fatal(err)
@@ -271,6 +276,7 @@ func TestChrootCopyFileWithTar(t *testin
 }
 
 func TestChrootUntarPath(t *testing.T) {
+	t.Skip("DM - skip privileged test")
 	// TODO Windows: Figure out why this is failing
 	if runtime.GOOS == "windows" {
 		t.Skip("Failing on Windows")
@@ -336,6 +342,7 @@ func (s *slowEmptyTarReader) Read(p []by
 }
 
 func TestChrootUntarEmptyArchiveFromSlowReader(t *testing.T) {
+	t.Skip("DM - skip privileged test")
 	tmpdir, err := ioutil.TempDir("", "docker-TestChrootUntarEmptyArchiveFromSlowReader")
 	if err != nil {
 		t.Fatal(err)
@@ -352,6 +359,7 @@ func TestChrootUntarEmptyArchiveFromSlow
 }
 
 func TestChrootApplyEmptyArchiveFromSlowReader(t *testing.T) {
+	t.Skip("DM - skip privileged test")
 	tmpdir, err := ioutil.TempDir("", "docker-TestChrootApplyEmptyArchiveFromSlowReader")
 	if err != nil {
 		t.Fatal(err)
@@ -368,6 +376,7 @@ func TestChrootApplyEmptyArchiveFromSlow
 }
 
 func TestChrootApplyDotDotFile(t *testing.T) {
+	t.Skip("DM - skip privileged test")
 	tmpdir, err := ioutil.TempDir("", "docker-TestChrootApplyDotDotFile")
 	if err != nil {
 		t.Fatal(err)
Index: docker.io/daemon/graphdriver/overlay/overlay_test.go
===================================================================
--- docker.io.orig/daemon/graphdriver/overlay/overlay_test.go
+++ docker.io/daemon/graphdriver/overlay/overlay_test.go
@@ -19,22 +19,27 @@ func init() {
 // This avoids creating a new driver for each test if all tests are run
 // Make sure to put new tests between TestOverlaySetup and TestOverlayTeardown
 func TestOverlaySetup(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.GetDriver(t, "overlay")
 }
 
 func TestOverlayCreateEmpty(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.DriverTestCreateEmpty(t, "overlay")
 }
 
 func TestOverlayCreateBase(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.DriverTestCreateBase(t, "overlay")
 }
 
 func TestOverlayCreateSnap(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.DriverTestCreateSnap(t, "overlay")
 }
 
 func TestOverlay50LayerRead(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	graphtest.DriverTestDeepLayerRead(t, 50, "overlay")
 }
 
Index: docker.io/pkg/archive/archive_linux_test.go
===================================================================
--- docker.io.orig/pkg/archive/archive_linux_test.go
+++ docker.io/pkg/archive/archive_linux_test.go
@@ -92,6 +92,7 @@ func checkFileMode(t *testing.T, path st
 }
 
 func TestOverlayTarUntar(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	oldmask, err := system.Umask(0)
 	if err != nil {
 		t.Fatal(err)
@@ -140,6 +141,7 @@ func TestOverlayTarUntar(t *testing.T) {
 }
 
 func TestOverlayTarAUFSUntar(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	oldmask, err := system.Umask(0)
 	if err != nil {
 		t.Fatal(err)
Index: docker.io/pkg/archive/archive_test.go
===================================================================
--- docker.io.orig/pkg/archive/archive_test.go
+++ docker.io/pkg/archive/archive_test.go
@@ -317,6 +317,7 @@ func TestUntarPathWithInvalidSrc(t *test
 }
 
 func TestUntarPath(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	tmpFolder, err := ioutil.TempDir("", "docker-archive-test")
 	if err != nil {
 		t.Fatal(err)
@@ -451,6 +452,7 @@ func TestCopyWithTarInvalidSrc(t *testin
 }
 
 func TestCopyWithTarInexistentDestWillCreateIt(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	tempFolder, err := ioutil.TempDir("", "docker-archive-test")
 	if err != nil {
 		t.Fatal(nil)
@@ -933,6 +935,7 @@ func TestUntarInvalidFilenames(t *testin
 }
 
 func TestUntarHardlinkToSymlink(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	// TODO Windows. There may be a way of running this, but turning off for now
 	if runtime.GOOS == "windows" {
 		t.Skip("hardlinks on Windows")
Index: docker.io/pkg/archive/archive_unix_test.go
===================================================================
--- docker.io.orig/pkg/archive/archive_unix_test.go
+++ docker.io/pkg/archive/archive_unix_test.go
@@ -151,6 +151,7 @@ func getInode(path string) (uint64, erro
 }
 
 func TestTarWithBlockCharFifo(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	origin, err := ioutil.TempDir("", "docker-test-tar-hardlink")
 	if err != nil {
 		t.Fatal(err)
@@ -204,6 +205,7 @@ func TestTarWithBlockCharFifo(t *testing
 
 // TestTarUntarWithXattr is Unix as Lsetxattr is not supported on Windows
 func TestTarUntarWithXattr(t *testing.T) {
+	t.Skip("DM - skipping privileged test")
 	if runtime.GOOS == "solaris" {
 		t.Skip()
 	}
