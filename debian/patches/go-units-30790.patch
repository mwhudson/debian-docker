Description: Update tests for go-units bump
Author: Vincent Demeester <vincent@sbr.pm>
Origin: commit:cb89d658dc6dca5f0efa21cac168ae82fea821d1, https://github.com/moby/moby/pull/30790
Date: Tue, 7 Feb 2017 21:58:56 +0100

diff --git a/cli/command/formatter/container_test.go b/cli/command/formatter/container_test.go
index 16137897b..f01332815 100644
--- a/cli/command/formatter/container_test.go
+++ b/cli/command/formatter/container_test.go
@@ -54,8 +54,8 @@ func TestContainerPsContext(t *testing.T) {
 		{types.Container{Created: unix}, true, time.Unix(unix, 0).String(), createdAtHeader, ctx.CreatedAt},
 		{types.Container{Ports: []types.Port{{PrivatePort: 8080, PublicPort: 8080, Type: "tcp"}}}, true, "8080/tcp", portsHeader, ctx.Ports},
 		{types.Container{Status: "RUNNING"}, true, "RUNNING", statusHeader, ctx.Status},
-		{types.Container{SizeRw: 10}, true, "10 B", sizeHeader, ctx.Size},
-		{types.Container{SizeRw: 10, SizeRootFs: 20}, true, "10 B (virtual 20 B)", sizeHeader, ctx.Size},
+		{types.Container{SizeRw: 10}, true, "10B", sizeHeader, ctx.Size},
+		{types.Container{SizeRw: 10, SizeRootFs: 20}, true, "10B (virtual 20B)", sizeHeader, ctx.Size},
 		{types.Container{}, true, "", labelsHeader, ctx.Labels},
 		{types.Container{Labels: map[string]string{"cpu": "6", "storage": "ssd"}}, true, "cpu=6,storage=ssd", labelsHeader, ctx.Labels},
 		{types.Container{Created: unix}, true, "About a minute", runningForHeader, ctx.RunningFor},
@@ -160,8 +160,8 @@ func TestContainerContextWrite(t *testing.T) {
 		{
 			Context{Format: NewContainerFormat("table", false, true)},
 			`CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES               SIZE
-containerID1        ubuntu              ""                  24 hours ago                                                foobar_baz          0 B
-containerID2        ubuntu              ""                  24 hours ago                                                foobar_bar          0 B
+containerID1        ubuntu              ""                  24 hours ago                                                foobar_baz          0B
+containerID2        ubuntu              ""                  24 hours ago                                                foobar_bar          0B
 `,
 		},
 		{
@@ -220,7 +220,7 @@ status:
 names: foobar_baz
 labels:
 ports:
-size: 0 B
+size: 0B
 
 container_id: containerID2
 image: ubuntu
@@ -230,7 +230,7 @@ status:
 names: foobar_bar
 labels:
 ports:
-size: 0 B
+size: 0B
 
 `, expectedTime, expectedTime),
 		},
@@ -333,8 +333,8 @@ func TestContainerContextWriteJSON(t *testing.T) {
 	}
 	expectedCreated := time.Unix(unix, 0).String()
 	expectedJSONs := []map[string]interface{}{
-		{"Command": "\"\"", "CreatedAt": expectedCreated, "ID": "containerID1", "Image": "ubuntu", "Labels": "", "LocalVolumes": "0", "Mounts": "", "Names": "foobar_baz", "Networks": "", "Ports": "", "RunningFor": "About a minute", "Size": "0 B", "Status": ""},
-		{"Command": "\"\"", "CreatedAt": expectedCreated, "ID": "containerID2", "Image": "ubuntu", "Labels": "", "LocalVolumes": "0", "Mounts": "", "Names": "foobar_bar", "Networks": "", "Ports": "", "RunningFor": "About a minute", "Size": "0 B", "Status": ""},
+		{"Command": "\"\"", "CreatedAt": expectedCreated, "ID": "containerID1", "Image": "ubuntu", "Labels": "", "LocalVolumes": "0", "Mounts": "", "Names": "foobar_baz", "Networks": "", "Ports": "", "RunningFor": "About a minute", "Size": "0B", "Status": ""},
+		{"Command": "\"\"", "CreatedAt": expectedCreated, "ID": "containerID2", "Image": "ubuntu", "Labels": "", "LocalVolumes": "0", "Mounts": "", "Names": "foobar_bar", "Networks": "", "Ports": "", "RunningFor": "About a minute", "Size": "0B", "Status": ""},
 	}
 	out := bytes.NewBufferString("")
 	err := ContainerWrite(Context{Format: "{{json .}}", Output: out}, containers)
diff --git a/cli/command/formatter/image_test.go b/cli/command/formatter/image_test.go
index ffe77f667..cf134300a 100644
--- a/cli/command/formatter/image_test.go
+++ b/cli/command/formatter/image_test.go
@@ -34,7 +34,7 @@ func TestImageContext(t *testing.T) {
 		{imageContext{
 			i:     types.ImageSummary{Size: 10, VirtualSize: 10},
 			trunc: true,
-		}, "10 B", sizeHeader, ctx.Size},
+		}, "10B", sizeHeader, ctx.Size},
 		{imageContext{
 			i:     types.ImageSummary{Created: unix},
 			trunc: true,
@@ -109,9 +109,9 @@ func TestImageContextWrite(t *testing.T) {
 				},
 			},
 			`REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
-image               tag1                imageID1            24 hours ago        0 B
-image               tag2                imageID2            24 hours ago        0 B
-<none>              <none>              imageID3            24 hours ago        0 B
+image               tag1                imageID1            24 hours ago        0B
+image               tag2                imageID2            24 hours ago        0B
+<none>              <none>              imageID3            24 hours ago        0B
 `,
 		},
 		{
@@ -159,9 +159,9 @@ image               <none>
 				Digest: true,
 			},
 			`REPOSITORY          TAG                 DIGEST                                                                    IMAGE ID            CREATED             SIZE
-image               tag1                sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf   imageID1            24 hours ago        0 B
-image               tag2                <none>                                                                    imageID2            24 hours ago        0 B
-<none>              <none>              <none>                                                                    imageID3            24 hours ago        0 B
+image               tag1                sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf   imageID1            24 hours ago        0B
+image               tag2                <none>                                                                    imageID2            24 hours ago        0B
+<none>              <none>              <none>                                                                    imageID3            24 hours ago        0B
 `,
 		},
 		{
@@ -184,19 +184,19 @@ image               tag2                <none>
 tag: tag1
 image_id: imageID1
 created_at: %s
-virtual_size: 0 B
+virtual_size: 0B
 
 repository: image
 tag: tag2
 image_id: imageID2
 created_at: %s
-virtual_size: 0 B
+virtual_size: 0B
 
 repository: <none>
 tag: <none>
 image_id: imageID3
 created_at: %s
-virtual_size: 0 B
+virtual_size: 0B
 
 `, expectedTime, expectedTime, expectedTime),
 		},
@@ -212,21 +212,21 @@ tag: tag1
 digest: sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf
 image_id: imageID1
 created_at: %s
-virtual_size: 0 B
+virtual_size: 0B
 
 repository: image
 tag: tag2
 digest: <none>
 image_id: imageID2
 created_at: %s
-virtual_size: 0 B
+virtual_size: 0B
 
 repository: <none>
 tag: <none>
 digest: <none>
 image_id: imageID3
 created_at: %s
-virtual_size: 0 B
+virtual_size: 0B
 
 `, expectedTime, expectedTime, expectedTime),
 		},
diff --git a/cli/command/formatter/stats_test.go b/cli/command/formatter/stats_test.go
index d5a17cc70..02f71508e 100644
--- a/cli/command/formatter/stats_test.go
+++ b/cli/command/formatter/stats_test.go
@@ -21,16 +21,16 @@ func TestContainerStatsContext(t *testing.T) {
 		{StatsEntry{Container: containerID}, containerID, containerHeader, ctx.Container},
 		{StatsEntry{CPUPercentage: 5.5}, "5.50%", cpuPercHeader, ctx.CPUPerc},
 		{StatsEntry{CPUPercentage: 5.5, IsInvalid: true}, "--", cpuPercHeader, ctx.CPUPerc},
-		{StatsEntry{NetworkRx: 0.31, NetworkTx: 12.3}, "0.31 B / 12.3 B", netIOHeader, ctx.NetIO},
+		{StatsEntry{NetworkRx: 0.31, NetworkTx: 12.3}, "0.31B / 12.3B", netIOHeader, ctx.NetIO},
 		{StatsEntry{NetworkRx: 0.31, NetworkTx: 12.3, IsInvalid: true}, "--", netIOHeader, ctx.NetIO},
-		{StatsEntry{BlockRead: 0.1, BlockWrite: 2.3}, "0.1 B / 2.3 B", blockIOHeader, ctx.BlockIO},
+		{StatsEntry{BlockRead: 0.1, BlockWrite: 2.3}, "0.1B / 2.3B", blockIOHeader, ctx.BlockIO},
 		{StatsEntry{BlockRead: 0.1, BlockWrite: 2.3, IsInvalid: true}, "--", blockIOHeader, ctx.BlockIO},
 		{StatsEntry{MemoryPercentage: 10.2}, "10.20%", memPercHeader, ctx.MemPerc},
 		{StatsEntry{MemoryPercentage: 10.2, IsInvalid: true}, "--", memPercHeader, ctx.MemPerc},
 		{StatsEntry{MemoryPercentage: 10.2, OSType: "windows"}, "--", memPercHeader, ctx.MemPerc},
-		{StatsEntry{Memory: 24, MemoryLimit: 30}, "24 B / 30 B", memUseHeader, ctx.MemUsage},
+		{StatsEntry{Memory: 24, MemoryLimit: 30}, "24B / 30B", memUseHeader, ctx.MemUsage},
 		{StatsEntry{Memory: 24, MemoryLimit: 30, IsInvalid: true}, "-- / --", memUseHeader, ctx.MemUsage},
-		{StatsEntry{Memory: 24, MemoryLimit: 30, OSType: "windows"}, "24 B", winMemUseHeader, ctx.MemUsage},
+		{StatsEntry{Memory: 24, MemoryLimit: 30, OSType: "windows"}, "24B", winMemUseHeader, ctx.MemUsage},
 		{StatsEntry{PidsCurrent: 10}, "10", pidsHeader, ctx.PIDs},
 		{StatsEntry{PidsCurrent: 10, IsInvalid: true}, "--", pidsHeader, ctx.PIDs},
 		{StatsEntry{PidsCurrent: 10, OSType: "windows"}, "--", pidsHeader, ctx.PIDs},
@@ -67,7 +67,7 @@ func TestContainerStatsContextWrite(t *testing.T) {
 		{
 			Context{Format: "table {{.MemUsage}}"},
 			`MEM USAGE / LIMIT
-20 B / 20 B
+20B / 20B
 -- / --
 `,
 		},
@@ -129,7 +129,7 @@ func TestContainerStatsContextWriteWindows(t *testing.T) {
 		{
 			Context{Format: "table {{.MemUsage}}"},
 			`PRIV WORKING SET
-20 B
+20B
 -- / --
 `,
 		},
diff --git a/cli/command/service/opts_test.go b/cli/command/service/opts_test.go
index 78b956ad6..d55862d4b 100644
--- a/cli/command/service/opts_test.go
+++ b/cli/command/service/opts_test.go
@@ -12,7 +12,7 @@ import (
 
 func TestMemBytesString(t *testing.T) {
 	var mem memBytes = 1048576
-	assert.Equal(t, mem.String(), "1 MiB")
+	assert.Equal(t, mem.String(), "1MiB")
 }
 
 func TestMemBytesSetAndValue(t *testing.T) {
diff --git a/integration-cli/docker_cli_ps_test.go b/integration-cli/docker_cli_ps_test.go
index 19ede90d5..0305064a6 100644
--- a/integration-cli/docker_cli_ps_test.go
+++ b/integration-cli/docker_cli_ps_test.go
@@ -152,7 +152,7 @@ func (s *DockerSuite) TestPsListContainersSize(c *check.C) {
 	baseLines := strings.Split(strings.Trim(baseOut, "\n "), "\n")
 	baseSizeIndex := strings.Index(baseLines[0], "SIZE")
 	baseFoundsize := baseLines[1][baseSizeIndex:]
-	baseBytes, err := strconv.Atoi(strings.Split(baseFoundsize, " ")[0])
+	baseBytes, err := strconv.Atoi(strings.Split(baseFoundsize, "B")[0])
 	c.Assert(err, checker.IsNil)
 
 	name := "test_size"
@@ -180,7 +180,7 @@ func (s *DockerSuite) TestPsListContainersSize(c *check.C) {
 	idIndex := strings.Index(lines[0], "CONTAINER ID")
 	foundID := lines[1][idIndex : idIndex+12]
 	c.Assert(foundID, checker.Equals, id[:12], check.Commentf("Expected id %s, got %s", id[:12], foundID))
-	expectedSize := fmt.Sprintf("%d B", (2 + baseBytes))
+	expectedSize := fmt.Sprintf("%dB", (2 + baseBytes))
 	foundSize := lines[1][sizeIndex:]
 	c.Assert(foundSize, checker.Contains, expectedSize, check.Commentf("Expected size %q, got %q", expectedSize, foundSize))
 }
diff --git a/pkg/jsonmessage/jsonmessage_test.go b/pkg/jsonmessage/jsonmessage_test.go
index c6c5b0ed2..f71c732d4 100644
--- a/pkg/jsonmessage/jsonmessage_test.go
+++ b/pkg/jsonmessage/jsonmessage_test.go
@@ -29,15 +29,15 @@ func TestProgress(t *testing.T) {
 		t.Fatalf("Expected empty string, got '%s'", jp.String())
 	}
 
-	expected := "     1 B"
+	expected := "      1B"
 	jp2 := JSONProgress{Current: 1}
 	if jp2.String() != expected {
 		t.Fatalf("Expected %q, got %q", expected, jp2.String())
 	}
 
-	expectedStart := "[==========>                                        ]     20 B/100 B"
+	expectedStart := "[==========>                                        ]      20B/100B"
 	if termsz != nil && termsz.Width <= 110 {
-		expectedStart = "    20 B/100 B"
+		expectedStart = "    20B/100B"
 	}
 	jp3 := JSONProgress{Current: 20, Total: 100, Start: time.Now().Unix()}
 	// Just look at the start of the string
@@ -46,9 +46,9 @@ func TestProgress(t *testing.T) {
 		t.Fatalf("Expected to start with %q, got %q", expectedStart, jp3.String())
 	}
 
-	expected = "[=========================>                         ]     50 B/100 B"
+	expected = "[=========================>                         ]      50B/100B"
 	if termsz != nil && termsz.Width <= 110 {
-		expected = "    50 B/100 B"
+		expected = "    50B/100B"
 	}
 	jp4 := JSONProgress{Current: 50, Total: 100}
 	if jp4.String() != expected {
@@ -56,9 +56,9 @@ func TestProgress(t *testing.T) {
 	}
 
 	// this number can't be negative gh#7136
-	expected = "[==================================================>]     50 B"
+	expected = "[==================================================>]      50B"
 	if termsz != nil && termsz.Width <= 110 {
-		expected = "    50 B"
+		expected = "    50B"
 	}
 	jp5 := JSONProgress{Current: 50, Total: 40}
 	if jp5.String() != expected {
@@ -132,7 +132,7 @@ func TestJSONMessageDisplay(t *testing.T) {
 			Progress: &JSONProgress{Current: 1},
 		}: {
 			"",
-			fmt.Sprintf("%c[2K\rstatus      1 B\r", 27),
+			fmt.Sprintf("%c[2K\rstatus       1B\r", 27),
 		},
 	}
 
@@ -215,7 +215,7 @@ func TestDisplayJSONMessagesStream(t *testing.T) {
 		// With progressDetail
 		"{ \"id\": \"ID\", \"status\": \"status\", \"progressDetail\": { \"Current\": 1} }": {
 			"", // progressbar is disabled in non-terminal
-			fmt.Sprintf("\n%c[%dA%c[2K\rID: status      1 B\r%c[%dB", 27, 1, 27, 27, 1),
+			fmt.Sprintf("\n%c[%dA%c[2K\rID: status       1B\r%c[%dB", 27, 1, 27, 27, 1),
 		},
 	}
 	for jsonMessage, expectedMessages := range messages {
diff --git a/pkg/streamformatter/streamformatter_test.go b/pkg/streamformatter/streamformatter_test.go
index 93ec90f5f..f087b92d8 100644
--- a/pkg/streamformatter/streamformatter_test.go
+++ b/pkg/streamformatter/streamformatter_test.go
@@ -87,15 +87,15 @@ func TestJSONFormatProgress(t *testing.T) {
 	}
 
 	// The progress will always be in the format of:
-	// [=========================>                         ]     15 B/30 B 404933h7m11s
+	// [=========================>                         ]      15B/30B 412910h51m30s
 	// The last entry '404933h7m11s' is the timeLeftBox.
 	// However, the timeLeftBox field may change as progress.String() depends on time.Now().
 	// Therefore, we have to strip the timeLeftBox from the strings to do the comparison.
 
 	// Compare the progress strings before the timeLeftBox
-	expectedProgress := "[=========================>                         ]     15 B/30 B"
+	expectedProgress := "[=========================>                         ]      15B/30B"
 	// if terminal column is <= 110, expectedProgressShort is expected.
-	expectedProgressShort := "    15 B/30 B"
+	expectedProgressShort := "      15B/30B"
 	if !(strings.HasPrefix(msg.ProgressMessage, expectedProgress) ||
 		strings.HasPrefix(msg.ProgressMessage, expectedProgressShort)) {
 		t.Fatalf("ProgressMessage without the timeLeftBox must be %s or %s, got: %s",
