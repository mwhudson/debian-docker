#!/usr/bin/make -f
# -*- makefile -*-

export DH_GOPKG := github.com/docker/docker

# temporary build path (see http://golang.org/doc/code.html#GOPATH)
OUR_GOPATH := $(CURDIR)/.gopath
EXTRA_GOPATH := /usr/share/gocode

# if we've got the vendored source not purged, let's use it (normally purged via debian/repack.sh)
ifneq (, $(wildcard $(CURDIR)/vendor/src))
	EXTRA_GOPATH := $(CURDIR)/vendor:$(EXTRA_GOPATH)
endif

export GOPATH := $(OUR_GOPATH):$(EXTRA_GOPATH)

# a few helpful variables for deduplication
export DOCKER_VERSION := $(shell cat VERSION)

export DOCKER_GITCOMMIT := $(shell ./debian/helpers/gitcommit.sh $(DOCKER_VERSION))
export BUILDTIME := $(shell dpkg-parsechangelog -SDate)

# AppArmor can be optionally used in Debian and is there by default in Ubuntu, so we need support for it compiled into our binary
# same story with SELinux
export DOCKER_BUILDTAGS := apparmor selinux

# since "gccgo" doesn't ship the "dist" go tool (and isn't likely to start), let's use that for now to detect gc vs gccgo
export DOCKER_BUILD_TARGET := $(shell go tool dist env > /dev/null 2>&1 && echo dynbinary || echo dyngccgo)


APPARMOR_RECOMMENDS := $(shell dpkg-vendor --is Ubuntu && echo apparmor)
BUILT_LIBC := $(shell dpkg-query -f '$${source:Package} (= $${source:Version})' -W libc-dev-bin)
BUILT_GOLANG := $(shell dpkg-query -f '$${source:Package} (= $${source:Version})' -W $$(dpkg --search $$(readlink -f /usr/bin/go) | cut -d: -f1))
# TODO reintroduce dh-golang to get mwhudson's Built-Using magic

override_dh_gencontrol:
	echo 'apparmor:Recommends=$(APPARMOR_RECOMMENDS)' >> debian/docker.io.substvars
	echo 'libc:Built-Using=$(BUILT_LIBC)' >> debian/docker.io.substvars
	echo 'golang:Built-Using=$(BUILT_GOLANG)' >> debian/docker.io.substvars
	dh_gencontrol


setup-gopath:
	# we need to make sure we're in our GOPATH
	mkdir -p "$(OUR_GOPATH)/src/$$(dirname '$(DH_GOPKG)')"
	ln -sfT '$(CURDIR)' '$(OUR_GOPATH)/src/$(DH_GOPKG)'

override_dh_auto_build: setup-gopath
	@bash -c '{ [ "$$DOCKER_GITCOMMIT" ]; } || { echo; echo "error: missing DOCKER_GITCOMMIT - see debian/upstream-version-gitcommits"; echo; exit 2; } >&2'
	
	# build
	./hack/make.sh $(DOCKER_BUILD_TARGET)
	
	# compile man pages
	./man/md2man-all.sh -q


override_dh_install:
	## Do not install extra license files:
	dh_install -XLICENSE


override_dh_auto_test:


override_dh_installinit:
	dh_installinit --name=docker --no-restart-on-upgrade


override_dh_installudev:
	# use priority z80 to match the upstream priority of 80
	dh_installudev --priority=z80


override_dh_auto_clean:
	dh_auto_clean
	
	# OUR_GOPATH is created by us
	rm -rf '$(OUR_GOPATH)'
	
	# autogen is created by hack/make.sh
	# bundles is created by hack/make.sh
	# dockerversion/version_autogen.go is created by hack/make.sh
	# man/man*/ is created by man/md2man-all.sh
	rm -rf autogen bundles dockerversion/version_autogen.go man/man*/


%:
	dh $@ --with=systemd,bash-completion
